# options
set shell zsh
set shellopts '-euy'
set ifs "\n"
set filesep "\n"
set drawbox
set scrolloff 10
set hidden true
set ignorecase true
set icons true
set relativenumber true
set info size:time

# custom commands
cmd open &{{
    case $(file --mime-type -Lb $f) in
        text/*) lf -remote "send $id \$$EDITOR \$fx";;
        *) for f in $fx; do $OPENER $f > /dev/null 2> /dev/null & done;;
    esac
}}

cmd rename %[ -e $1 ] && printf "file exists" || mv $f $1

%mkdir -p ~/.trash

cmd trash %set -f; echo "$fx" | xargs -d '\n' -I {} mv -f {} ~/.trash

cmd svgo %set -f; echo "$fx" | xargs -d '\n' -I {} svgo {}

cmd extract ${{
    set -f
    case $f in
        *.tar.bz|*.tar.bz2|*.tbz|*.tbz2) tar xjvf $f;;
        *.tar.gz|*.tgz) tar xzvf $f;;
        *.tar.xz|*.txz) tar xJvf $f;;
        *.zip) unzip $f;;
        *.rar) unrar x $f;;
        *.7z) 7z x $f;;
    esac
}}

cmd mkdir ${{
  printf "Directory Name: "
  read ans
  mkdir $ans
}}

cmd mkfile ${{
  printf "File Name: "
  read ans
  touch $ans
}}

cmd delete ${{
  set -f
  printf "$fx\n"
  printf "delete?[y/n]"
  read ans
  [ "$ans" = "y" ] && rm -rf $fx
}}

cmd fzf_jump ${{
    res="$(find . -maxdepth 1 | fzf --reverse --header='Jump to location' | sed 's/\\/\\\\/g;s/"/\\"/g')"
    if [ -d "$res" ] ; then
        cmd="cd"
    elif [ -f "$res" ] ; then
        cmd="select"
    else
        exit 0
    fi
    lf -remote "send $id $cmd \"$res\""
}}

# system command bindings
map o &mimeopen $f
map O $mimeopen --ask $f
map <enter> open
map . set hidden!
map r push :rename<space>
map R reload
map <delete> delete
map <c-p> :fzf_jump

# custom commands bindings
map gx extract
map gmf mkfile
map gmd mkdir
map gsv svgo

# movement bindings
map gD cd ~/documents
map gdn cd ~/Downloads
map gdf cd ~/definitions
map gdo cd ~/.dotfiles
map gso cd ~/source
map gbc cd ~/source/base-components
map gbf cd ~/source/base-functionality
map gc cd ~/source/connex-front-end
